Operadores C
Operadores
Operadores são usados ​​para realizar operações em variáveis ​​e valores.

No exemplo abaixo, usamos o + operador para somar dois valores:

Exemplo
int myNum = 100 + 50;
Embora o +operador seja frequentemente usado para somar dois valores, como no exemplo acima, ele também pode ser usado para somar uma variável e um valor, ou uma variável e outra variável:

Exemplo
int sum1 = 100 + 50;        // 150 (100 + 50)
int sum2 = sum1 + 250;      // 400 (150 + 250)
int sum3 = sum2 + sum2;     // 800 (400 + 400)
C divide os operadores nos seguintes grupos:

Operadores aritméticos
Operadores de atribuição
Operadores de comparação
Operadores lógicos
Operadores bit a bit
Operadores aritméticos
Operadores aritméticos são usados ​​para realizar operações matemáticas comuns.

Operator	Name	Description	Example	Try it
+	Addition	Adds together two values	x + y	
-	Subtraction	Subtracts one value from another	x - y	
*	Multiplication	Multiplies two values	x * y	
/	Division	Divides one value by another	x / y	
%	Modulus	Returns the division remainder	x % y	
++	Increment	Increases the value of a variable by 1	++x	
--	Decrement	Decreases the value of a variable by 1	--x	
Operadores de Atribuição
Operadores de atribuição são usados ​​para atribuir valores a variáveis.

No exemplo abaixo, usamos o operador de atribuição= ( ) para atribuir o valor 10 a uma variável chamada x :

Exemplo
int x = 10;
O operador de atribuição de adição ( +=) adiciona um valor a uma variável:

Exemplo
int x = 10;
x += 5;
Uma lista de todos os operadores de atribuição:

Operator	Example	Same As	Try it
=	x = 5	x = 5	
+=	x += 3	x = x + 3	
-=	x -= 3	x = x - 3	
*=	x *= 3	x = x * 3	
/=	x /= 3	x = x / 3	
%=	x %= 3	x = x % 3	
&=	x &= 3	x = x & 3	
|=	x |= 3	x = x | 3	
^=	x ^= 3	x = x ^ 3	
>>=	x >>= 3	x = x >> 3	
<<=	x <<= 3	x = x << 3	
Operadores de comparação
Operadores de comparação são usados ​​para comparar dois valores (ou variáveis). Isto é importante na programação porque nos ajuda a encontrar respostas e a tomar decisões.

O valor de retorno de uma comparação é 1ou 0, o que significa verdadeiro ( 1) ou falso ( 0). Esses valores são conhecidos como valores booleanos e você aprenderá mais sobre eles no capítulo Booleanos e If..Else .

No exemplo a seguir, usamos o operador maior que> ( ) para descobrir se 5 é maior que 3:

Exemplo
int x = 5;
int y = 3;
printf("%d", x > y); // returns 1 (true) because 5 is greater than 3
Uma lista de todos os operadores de comparação:

Operator	Name	Example	Description	Try it
==	Equal to	x == y	Returns 1 if the values are equal	
!=	Not equal	x != y	Returns 1 if the values are not equal	
>	Greater than	x > y	Returns 1 if the first value is greater than the second value	
<	Less than	x < y	Returns 1 if the first value is less than the second value	
>=	Greater than or equal to	x >= y	Returns 1 if the first value is greater than, or equal to, the second value	
<=	Less than or equal to	x <= y	Returns 1 if the first value is less than, or equal to, the second value	
Operadores lógicos
Você também pode testar valores verdadeiros ou falsos com operadores lógicos.

Operadores lógicos são usados ​​para determinar a lógica entre variáveis ​​ou valores:

Operator	Name	Example	Description	Try it
&& 	Logical and	x < 5 &&  x < 10	Returns 1 if both statements are true	
|| 	Logical or	x < 5 || x < 4	Returns 1 if one of the statements is true	
!	Logical not	!(x < 5 && x < 10)	Reverse the result, returns 0 if the result is 1	
